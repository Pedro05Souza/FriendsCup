datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Player {
    id                String             @id @default(uuid())
    name              String
    intelligence      Int
    defense           Int
    attack            Int
    mentality         Int
    createdAt         DateTime           @default(now()) @map("created_at")
    championships     Championship[]
    groupPlayers      GroupPlayer[]
    duoPlayer1        Duo[]              @relation("DuoPlayer1")
    duoPlayer2        Duo[]              @relation("DuoPlayer2")
    matchWinner       Match[]            @relation("MatchWinner")
    matchParticipants MatchParticipant[] @relation("MatchParticipantPlayer")

    @@map("player")
}

model Championship {
    id        String              @id @default(uuid())
    title     String
    createdAt DateTime            @map("created_at")
    matches   Match[]
    players   Player[]
    duos      Duo[]
    groups    ChampionshipGroup[]
    isDuo     Boolean             @map("is_duo")

    @@map("championship")
}

model Match {
    id             String             @id @default(uuid())
    championship   Championship       @relation(fields: [championshipId], references: [id])
    championshipId String             @map("championship_id")
    matchPhase     String             @map("match_phase")
    participants   MatchParticipant[]
    winner         Player?            @relation("MatchWinner", fields: [winnerId], references: [id])
    winnerId       String?            @map("winner_id")
    duoWinner      Duo?               @relation("MatchDuoWinner", fields: [duoWinnerId], references: [id])
    duoWinnerId    String?            @map("duo_winner_id")

    @@map("match")
}

model MatchParticipant {
    id                   String  @id @default(uuid())
    match                Match   @relation(fields: [matchId], references: [id])
    matchId              String  @map("match_id")
    player               Player? @relation("MatchParticipantPlayer", fields: [playerId], references: [id])
    playerId             String? @map("player_id")
    duo                  Duo?    @relation("MatchParticipantDuo", fields: [duoId], references: [id])
    duoId                String? @map("duo_id")
    goals                Int     @default(0)
    penaltyShootoutGoals Int?    @default(0) @map("penalty_shootout_goals")

    @@map("match_participant")
}

model GroupPlayer {
    id                  String            @id @default(uuid())
    player              Player?           @relation(fields: [playerId], references: [id])
    playerId            String?           @map("player_id")
    duo                 Duo?              @relation(fields: [duoId], references: [id])
    duoId               String?           @map("duo_id")
    championshipGroup   ChampionshipGroup @relation(fields: [championshipGroupId], references: [id])
    championshipGroupId String            @map("championship_group_id")
    points              Int               @default(0)
    goalDifference      Int               @default(0) @map("goal_difference")

    @@map("group_player")
}

model ChampionshipGroup {
    id             String        @id @default(uuid())
    championship   Championship  @relation(fields: [championshipId], references: [id])
    championshipId String        @map("championship_id")
    groupPlayers   GroupPlayer[]
    createdAt      DateTime      @default(now()) @map("created_at")

    @@map("championship_group")
}

model Duo {
    id                String             @id @default(uuid())
    player1           Player             @relation("DuoPlayer1", fields: [player1Id], references: [id])
    player1Id         String             @map("player_1_id")
    player2           Player             @relation("DuoPlayer2", fields: [player2Id], references: [id])
    player2Id         String             @map("player_2_id")
    championship      Championship       @relation(fields: [championshipId], references: [id])
    championshipId    String             @map("championship_id")
    name              String
    matchDuoWinners   Match[]            @relation("MatchDuoWinner")
    matchParticipants MatchParticipant[] @relation("MatchParticipantDuo")
    groupPlayers      GroupPlayer[]

    @@unique([player1Id, player2Id, championshipId])
    @@map("duo")
}
